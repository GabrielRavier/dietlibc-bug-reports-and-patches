Return-Path: <gabravier@gmail.com>
Received: from fedora.int.ionis-it.com ([185.246.211.72])
        by smtp.gmail.com with ESMTPSA id d10-20020a056000114a00b002253604bbefsm7776936wrx.75.2022.09.12.07.42.54
        (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
        Mon, 12 Sep 2022 07:42:55 -0700 (PDT)
From: Gabriel Ravier <gabravier@gmail.com>
To: dietlibc@fefe.de
Cc: Gabriel Ravier <gabravier@gmail.com>
Subject: [PATCH] Fix printf not formatting minimum values of narrowed types correctly
Date: Mon, 12 Sep 2022 16:41:57 +0200
Message-Id: <20220912144157.871863-1-gabravier@gmail.com>
X-Mailer: git-send-email 2.37.3
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit

dietlibc, for a statement such as `printf("%hhd", 128)`, currently
incorrectly outputs 128, when the standard mandates that it output
-128.

This change makes it so that smaller types than int have their values
correctly sign-extended, which is especially important for SHRT_MIN
and SCHAR_MIN.
---
 dietlibc/lib/__v_printf.c | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/dietlibc/lib/__v_printf.c b/dietlibc/lib/__v_printf.c
index e7cccef1..536e837e 100644
--- a/dietlibc/lib/__v_printf.c
+++ b/dietlibc/lib/__v_printf.c
@@ -319,6 +319,10 @@ num_printf:
 	}
 	else {
 	  number=va_arg(arg_ptr,int);
+          if ((flag_long<-1)&&flag_in_sign)
+            number=(signed char)number;
+          if ((flag_long==-1)&&flag_in_sign)
+            number=(signed short)number;
 	  if (sizeof(int) != sizeof(long) && !flag_in_sign)
 	    number&=((unsigned int)-1);
 	}
-- 
2.37.3

